{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"fist article","slug":"first","date":"2021-05-25T11:49:41.000Z","updated":"2021-05-25T11:52:51.258Z","comments":true,"path":"2021/05/25/first/","link":"","permalink":"http://example.com/2021/05/25/first/","excerpt":"","text":"为什么需要分库分表随着业务的发展，数据量的增加，单表数据量达到上限，性能瓶颈出现 解决方案 把数据分散在不同的数据库中，使得单一数据库的数据量变小来缓解单一数据库的性能问题，从而达到提升数据库性能的目的，如下图：将电商数据库拆分为若干独立的数据库，并且对于大表也拆分为若干小表，通过这种数据库拆分的方法来解决数据库的性能问题。 在生产中通常包括：垂直分库、垂直分表、水平分库、水平分表四种方式 垂直分表将访问频次低的商品描述信息单独存放在一张表中，访问频次较高的商品基本信息单独放在一张表中, 核心概念是动静分离(热数据/冷数据) 通常我们按以下原则进行垂直拆分: 把不常用的字段单独放在一张表 把text，blob等大字段拆分出来放在附表中 经常组合查询的列放在一张表中 垂直分库垂直分库是指按照业务将表进行分类，分布到不同的数据库上面，每个库可以放在不同的服务器上， 它的核心理念是专库专用(微服务概念) 垂直分库能带来的优点： 解决业务层面的耦合，业务清晰 能对不同业务的数据进行分级管理、维护、监控、扩展等 高并发场景下，垂直分库一定程度的提升IO、数据库连接数、降低单机硬件资源的瓶颈 缺点： 跨库的业务不能join，只能通过远程调用方式解决 分布式事务处理复杂 垂直分库通过将表按业务分类，然后分布在不同数据库，并且可以将这些数据库部署在不同服务器上，从而达到多个服务器共同分摊压力的效果，但是依然没有解决单表数据量过大的问题。 水平拆分水平分库是把同一个表的数据按一定规则拆到不同的数据库中，每个库可以放在不同的服务器上。 总结优先级如下： 垂直分表：可以把一个宽表的字段按访问频次、是否是大字段的原则拆分为多个表，这样既能使业务清晰，还能提升部分性能。拆分后，尽量从业务角度避免联查，否则性能方面将得不偿失。 垂直分库：可以把多个表按业务耦合松紧归类，分别存放在不同的库，这些库可以分布在不同服务器，从而使访问压力被多服务器负载，大大提升性能，同时能提高整体架构的业务清晰度，不同的业务库可根据自身情况定制优化方案。但是它需要解决跨库带来的所有复杂问题。 水平分库：可以把一个表的数据(按数据行)分到多个不同的库，每个库只有这个表的部分数据，这些库可以分布在不同服务器，从而使访问压力被多服务器负载，大大提升性能。它不仅需要解决跨库带来的所有复杂问题，还要解决数据路由的问题(数据路由问题后边介绍)。 水平分表：可以把一个表的数据(按数据行)分到多个同一个数据库的多张表中，每个表只有这个表的部分数据，这样做能小幅提升性能，它仅仅作为水平分库的一个补充优化。 一般来说，在系统设计阶段就应该根据业务耦合松紧来确定垂直分库，垂直分表方案，在数据量及访问压力不是特别大的情况，首先考虑缓存、读写分离、索引技术等方案。若数据量极大，且持续增长，再考虑水平分库水平分表方案。 最佳实践 Sharding-JDBC 增强版JDBC, 简化对分库分表后，数据查询的操作 主要功能： 数据分片 读写分离 分片策略定制化/无中心分布式主键","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2021-05-25T11:47:07.816Z","updated":"2021-05-25T11:47:07.816Z","comments":true,"path":"2021/05/25/hello-world/","link":"","permalink":"http://example.com/2021/05/25/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}